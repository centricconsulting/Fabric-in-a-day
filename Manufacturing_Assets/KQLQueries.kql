
.create table TransformedOEEDataSilver (
    totalUnits: long,
    productivity: double,
    plant: string,
    overallEquipmentEffectiveness: double,
    quality: double,
    state: long,
    uptime: long,
    line: string,
    timestamp: datetime,
    asset: string,
    defectiveUnits: long,
    availability: double,
    EventProcessedUtcTime: datetime,
    PartitionId: long,
    EventEnqueuedUtcTime: datetime,
    ingestedAt: datetime,
    uptimeDuration: timespan
)

.create-or-alter function TransformOEEDataToSilver() {
OEEData
| extend 
    timestamp = unixtime_milliseconds_todatetime(timestamp),
    overallEquipmentEffectiveness = tolong(OEE),
    quality = round(todouble(Q),4),
    productivity = round(todouble(P),4),
    availability = round(todouble(A),4),
    uptimeDuration = totimespan(uptime * 1s)
| project 
    timestamp,
    overallEquipmentEffectiveness,
    quality,
    productivity,
    availability,
    uptime,
    uptimeDuration,
    plant,
    state,
    totalUnits,
    PartitionId,
    defectiveUnits,
    EventProcessedUtcTime,
    line,
    asset,
    EventEnqueuedUtcTime
}

.alter table TransformedOEEDataSilver policy update
```[{
    "IsEnabled": true,
    "Source": "OEEData",
    "Query": "TransformOEEDataToSilver()",
    "IsTransactional": false,
    "PropagateIngestionProperties": false
}]```


.create table SilverWorkOrderHistory (
    woDate: datetime,
    woDateOnly: string,   // because we used format_datetime() for this
    plant: string,
    woNumber: string,
    line: string,
    woType: string,
    partitionId: long,
    taskDescription: string,
    priority: string,
    asset: string,
    assignedTo: string,
    ingestionTime: datetime
)

.create-or-alter function TransformWorkOrderHistorySilver() {
workOrderHistory
| extend     woDateOnly = format_datetime(WO_Date, 'yyyy-MM-dd HH:mm'),ingestionTime = ingestion_time()
| project 
    woDate = WO_Date,
    woDateOnly,
    plant = plant,
    woNumber = WO_Number,
    line = line,
    woType = WO_Type,
    partitionId = tolong(PartitionId),
    taskDescription = Task_Description,
    priority = Priority,
    asset = asset,
    assignedTo = Assigned_To,
    ingestionTime 
}


.alter table SilverWorkOrderHistory policy update
```[{
    "IsEnabled": true,
    "Source": "workOrderHistory",
    "Query": "TransformWorkOrderHistorySilver()",
    "IsTransactional": false,
    "PropagateIngestionProperties": false
}]```

.create async materialized-view with (backfill = true) mv_OEEData on table TransformedOEEDataSilver
{
    TransformedOEEDataSilver
    | summarize avg(overallEquipmentEffectiveness) by bin(ingestedAt,5m)
}
